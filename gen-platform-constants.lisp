;;;; gen-platform-constants.lisp
;;;; To generate platform-specific systemcall numbers as Lisp constants,
;;;; you'll need to download a copy of linux kernel from kernel.org.
;;;; tbl-path for x86_64 can be found from linux-${kernel_version}/arch/x86/entry/syscalls/syscall_64.tbl
(in-package :cl-user)

(require :asdf)

(defun parse-tbl (tbl-path arch)
  (with-open-file (in tbl-path :direction :input)
    (loop with res = (list)
          for line = (read-line in nil nil)
          while line
          when (and (plusp (length line)) (not (char= #\# (char line 0))))
            do (destructuring-bind (sysno abi name &rest fields)
                   (delete "" (uiop:split-string line :separator #(#\Space #\Tab)) :test 'string=)
                 (declare (ignore fields))
                 (when (and (string= arch "x86_64") (not (string= abi "x32")))
                   (push (cons (concatenate 'string "+" (string-upcase name) "+")
                               sysno)
                         res)))
          finally (return (nreverse res)))))

(defun gen-platform-constants (tbl-path arch kernel-version)
  (with-open-file (out (format nil "src/platform/linux-~a/constants.lisp" arch)
                       :direction :output
                       :if-exists :supersede)
    ;; Write header
    (write-line ";;;; constants.lisp" out)
    (write-line ";;;; DO NOT MODIFY - this file is automatically generated by gen-platform-constants.lisp" out)
    (format out ";;;; System call numbers for linux-~a, parsed from kernel version ~a~%" arch kernel-version)
    ;; Scan definitions
    (let ((defs (parse-tbl tbl-path arch))
          (package-name "syscall.constants"))
      ;; Write package definitions
      (format out "(in-package #:cl-user)~%~%")
      (format out "(defpackage ~a
  (:use #:cl)
  (:export
~{    #:~a~^~%~}))~%~%"
              package-name
              (mapcar 'car defs))
      (format out "(in-package #:~a)~%~%" package-name)
      ;; Write constants definitions
      (loop for (name . sysno) in defs
            do (format out "(defconstant ~a ~d)~%" name sysno)))
    ;; End
    (terpri out)))
